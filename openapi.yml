openapi: 3.0.0
info:
  title: User Management API
  description: API for user registration, authentication, and profile management
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: API Gateway
paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '200':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Registration failed (e.g., username or email already exists)
  /login:
    post:
      summary: Authenticate a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginForm'
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '401':
          description: Authentication failed
  /profile:
    get:
      summary: Get user profile information
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Not authenticated
    put:
      summary: Update user profile information
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Not authenticated
components:
  schemas:
    UserCreate:
      type: object
      required:
        - username
        - password
        - email
      properties:
        username:
          type: string
          example: johndoe
        password:
          type: string
          format: password
          example: password123
        email:
          type: string
          format: email
          example: john.doe@example.com
    UserUpdate:
      type: object
      properties:
        first_name:
          type: string
          example: John
        last_name:
          type: string
          example: Doe
        birth_date:
          type: string
          format: date
          example: 1990-01-01
        email:
          type: string
          format: email
          example: john.doe@example.com
        phone_number:
          type: string
          example: 1234567890
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        username:
          type: string
          example: johndoe
        email:
          type: string
          format: email
          example: john.doe@example.com
        first_name:
          type: string
          example: John
        last_name:
          type: string
          example: Doe
        birth_date:
          type: string
          format: date
          example: 1990-01-01
        phone_number:
          type: string
          example: 1234567890
        created_at:
          type: string
          format: date-time
          example: 2023-01-01T00:00:00Z
        updated_at:
          type: string
          format: date-time
          example: 2023-01-01T00:00:00Z
    LoginForm:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: johndoe
        password:
          type: string
          format: password
          example: password123
    Token:
      type: object
      properties:
        access_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        token_type:
          type: string
          example: bearer
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
